import{_ as f}from"./ValaxyMain.vue_vue_type_script_setup_true_lang.BA-p-aN3.js";import"./chunks/pinia.C8xpNjyg.js";import{d as b,u as $,a as g}from"./chunks/vue-router._bgINN5_.js";import{a1 as k,a2 as P,a8 as e,V as v,a7 as a,a6 as l,a4 as x,a9 as t,Z as w}from"./framework.DIhz9aLV.js";import"./app.C9BwLGJy.js";import"./chunks/dayjs.BsdSHi3w.js";import"./chunks/vue-i18n.BQpbHoSW.js";/* empty css                    */import"./chunks/nprogress.Cm54BOVh.js";import"./router.-rV2tM5K.js";const F=b("/posts/栈与队列",async r=>JSON.parse('{"title":"栈与队列","description":"","frontmatter":{"title":"栈与队列","date":"2025-08-14 00:00:00","updated":"2025-08-22 01:17:08","categories":"笔记","tags":["学习","编程","C++"],"cover":"https://pic.akorin.icu/20250814101334375.webp","codeHeightLimit":500,"toc":true,"time_warning":true,"end":true},"headers":[],"relativePath":"pages/posts/栈与队列.md","lastUpdated":1757605243000}'),{lazy:(r,i)=>r.name===i.name}),I={__name:"栈与队列",setup(r,{expose:i}){const{data:s}=F(),d=g(),p=$(),u=Object.assign(p.meta.frontmatter||{},s.value?.frontmatter||{});return d.currentRoute.value.data=s.value,w("valaxy:frontmatter",u),globalThis.$frontmatter=u,i({frontmatter:{title:"栈与队列",date:"2025-08-14 00:00:00",updated:"2025-08-22 01:17:08",categories:"笔记",tags:["学习","编程","C++"],cover:"https://pic.akorin.icu/20250814101334375.webp",codeHeightLimit:500,toc:!0,time_warning:!0,end:!0}}),(o,n)=>{const m=f;return P(),k(m,{frontmatter:v(u)},{"main-content-md":e(()=>[n[0]||(n[0]=l("blockquote",null,[l("p",null,"栈与队列需要依赖数组或者链表，且都不是一个单独的数据结构。")],-1)),x(" more "),n[1]||(n[1]=l("p",null,[l("strong",null,"栈"),t(" 和 "),l("strong",null,"队列"),t(" 本质上是抽象数据结构（ADT, Abstract Data Type），它们定义的是操作规则，而不是具体的存储方式。")],-1)),n[2]||(n[2]=l("h2",{id:"栈",tabindex:"-1"},[t("栈 "),l("a",{class:"header-anchor",href:"#栈","aria-label":'Permalink to "栈"'},"​")],-1)),n[3]||(n[3]=l("ul",null,[l("li",null,[t("允许插入、删除的一端称为栈顶（"),l("code",null,"top"),t("）。")]),l("li",null,[t("另一端称为栈底（"),l("code",null,"bottom"),t("），固定不动。")])],-1)),n[4]||(n[4]=l("blockquote",null,[l("p",null,"特点： 先进后出、后进先出(LIFO\\FILO)，像个弹夹。")],-1)),n[5]||(n[5]=l("h3",{id:"顺序栈",tabindex:"-1"},[t("顺序栈 "),l("a",{class:"header-anchor",href:"#顺序栈","aria-label":'Permalink to "顺序栈"'},"​")],-1)),n[6]||(n[6]=l("p",null,"顺序栈是依赖于数组实现。",-1)),n[7]||(n[7]=l("ul",null,[l("li",null,[t("栈顶指针 "),l("code",null,"top"),t(" 用于记录当前栈顶元素的位置。")]),l("li",null,"栈底位置固定，一般为数组下标 0。"),l("li",null,[t("当 "),l("code",null,"top == -1"),t("（或 0 元素不存在）时，栈为空。")]),l("li",null,[t("当 "),l("code",null,"top"),t(" 指向数组最后一个位置时，栈满（需要扩容或报错）。")])],-1)),n[8]||(n[8]=l("h4",{id:"基本操作",tabindex:"-1"},[t("基本操作 "),l("a",{class:"header-anchor",href:"#基本操作","aria-label":'Permalink to "基本操作"'},"​")],-1)),n[9]||(n[9]=l("ol",null,[l("li",null,[t("初始化：申请固定大小的数组空间，并将 "),l("code",null,"top"),t(" 置为 -1（空栈）。")]),l("li",null,[t("入栈（Push）：判断栈是否已满，若未满，"),l("code",null,"top++"),t(" 后在 "),l("code",null,"top"),t(" 位置插入新元素。")]),l("li",null,[t("出栈（Pop）：判断栈是否为空，若不为空，取出 "),l("code",null,"top"),t(" 位置的元素然后"),l("code",null,"top--"),t(" 。")]),l("li",null,[t("栈满 ： "),l("code",null,"top == sizeof(arr)/sizeof(arr[0])")]),l("li",null,[t("取栈顶元素（GetTop）：直接访问 "),l("code",null,"top"),t(" 位置的元素，不修改 "),l("code",null,"top"),t("。")])],-1)),n[10]||(n[10]=l("h4",{id:"出栈数据的规律",tabindex:"-1"},[t("出栈数据的规律 "),l("a",{class:"header-anchor",href:"#出栈数据的规律","aria-label":'Permalink to "出栈数据的规律"'},"​")],-1)),n[11]||(n[11]=l("p",null,[t("例如 "),l("code",null,"[1,2,3,4,5]"),t(" 入栈，此时如下情况的出栈都是有可能的：")],-1)),n[12]||(n[12]=l("ul",null,[l("li",null,[l("code",null,"5 4 3 2 1")]),l("li",null,[l("code",null,"4 3 5 2 1")])],-1)),n[13]||(n[13]=l("p",null,[t("但是 "),l("code",null,"4 3 1 5 2"),t("是不可能的，因为 "),l("code",null,"1"),t(" 不可能直接越过 "),l("code",null,"2"),t(" 就出栈了。")],-1)),n[14]||(n[14]=l("h3",{id:"链式栈",tabindex:"-1"},[t("链式栈 "),l("a",{class:"header-anchor",href:"#链式栈","aria-label":'Permalink to "链式栈"'},"​")],-1)),n[15]||(n[15]=l("p",null,[t("顾名思义就是用链表实现的栈结构，同样可以定义 "),l("code",null,"Node"),t(" 类型的指针 "),l("code",null,"top"),t(" 作为栈顶指针。")],-1)),n[16]||(n[16]=l("ul",null,[l("li",null,[t("栈顶指针 "),l("code",null,"top"),t(" 用于记录当前栈顶元素的位置。")]),l("li",null,[t("当 "),l("code",null,"top == nullptr"),t("（或 0 元素不存在）时，栈为空。")]),l("li",null,[t("当 "),l("code",null,"top"),t(" 指向数组最后一个位置时，栈满（需要扩容或报错）")])],-1)),n[17]||(n[17]=l("h4",{id:"基本操作-1",tabindex:"-1"},[t("基本操作 "),l("a",{class:"header-anchor",href:"#基本操作-1","aria-label":'Permalink to "基本操作"'},"​")],-1)),n[18]||(n[18]=l("ol",null,[l("li",null,[t("初始化：申请固定大小的数组空间，并将 "),l("code",null,"top"),t(" 置为 "),l("code",null,"nullptr"),t("（空栈）。")]),l("li",null,[t("入栈（Push）：利用头插法入栈。令 "),l("code",null,"top = new Node"),t("，然后 "),l("code",null,"top->next = head->next; head_->next = top;"),t("。")]),l("li",null,[t("出栈（Pop）：判断栈是否为空，若不为空，即删除 "),l("code",null,"top"),t(" 位置的元素然后"),l("code",null,"head->next = top->next; delete top; top = head->next"),t(" 。")]),l("li",null,"栈满 ： 链式指针不存在判断栈满，除非系统分配不了堆内存。"),l("li",null,[t("访问栈顶元素（GetTop）：直接返回 "),l("code",null,"top->data"),t(" 。")])],-1)),n[19]||(n[19]=l("h2",{id:"队列",tabindex:"-1"},[t("队列 "),l("a",{class:"header-anchor",href:"#队列","aria-label":'Permalink to "队列"'},"​")],-1)),n[20]||(n[20]=l("p",null,"队列（Queue）是一种 **先进先出（FIFO, First In First Out）**的数据结构，可以类比为排队买票：先来的人先走，后到的人只能排在队尾等候。",-1)),n[21]||(n[21]=l("h3",{id:"环形队列",tabindex:"-1"},[t("环形队列 "),l("a",{class:"header-anchor",href:"#环形队列","aria-label":'Permalink to "环形队列"'},"​")],-1)),n[22]||(n[22]=l("ul",null,[l("li",null,[l("code",null,"front"),t(" : 队头")]),l("li",null,[l("code",null,"rear"),t(" : 队尾")])],-1)),n[23]||(n[23]=l("h4",{id:"基本操作-2",tabindex:"-1"},[t("基本操作 "),l("a",{class:"header-anchor",href:"#基本操作-2","aria-label":'Permalink to "基本操作"'},"​")],-1)),n[24]||(n[24]=l("ol",null,[l("li",null,[t("入队 ：只能在队尾（rear）插入元素， "),l("code",null,"rear = (rear + 1) % size;")]),l("li",null,[t("出队 ：只能在队头（front）删除元素， "),l("code",null,"front = (front + 1) % size;")]),l("li",null,"顺序是固定的，不能随机访问中间元素（不像数组/向量那样支持 []）")],-1))]),"main-header":e(()=>[a(o.$slots,"main-header")]),"main-header-after":e(()=>[a(o.$slots,"main-header-after")]),"main-nav":e(()=>[a(o.$slots,"main-nav")]),"main-content-before":e(()=>[a(o.$slots,"main-content-before")]),"main-content":e(()=>[a(o.$slots,"main-content")]),"main-content-after":e(()=>[a(o.$slots,"main-content-after")]),"main-nav-before":e(()=>[a(o.$slots,"main-nav-before")]),"main-nav-after":e(()=>[a(o.$slots,"main-nav-after")]),comment:e(()=>[a(o.$slots,"comment")]),footer:e(()=>[a(o.$slots,"footer")]),aside:e(()=>[a(o.$slots,"aside")]),"aside-custom":e(()=>[a(o.$slots,"aside-custom")]),default:e(()=>[a(o.$slots,"default")]),_:3},8,["frontmatter"])}}};export{I as default,F as usePageData};
